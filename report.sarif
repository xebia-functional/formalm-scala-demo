{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "results": [
        {
          "baselineState": "new",
          "fixes": [
            {
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "src/main/scala/example/ScalaFix.scala"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startColumn": 171,
                        "startLine": 12
                      },
                      "insertedContent": {
                        "text": "// 1. Test: Check if the function `m` returns a list with the expected values\\nval result = m()\nassert(result == List(2, 3, 4))\\n\n// 2. Test: Check if the function `m` returns a list with the same length as the input list\\nval input = List(1, 2, 3)\nval result = m()\nassert(result.length == input.length)\\n\n// 3. Test: Check if the function `m` returns a list with unique values\\nval result = m()\nassert(result.distinct == result)\\n"
                      }
                    }
                  ]
                }
              ],
              "description": {
                "text": "Add tests"
              }
            }
          ],
          "level": "note",
          "locations": [
            {
              "message": {
                "text": "// 1. Test: Check if the function `m` returns a list with the expected values\\nval result = m()\nassert(result == List(2, 3, 4))\\n\n// 2. Test: Check if the function `m` returns a list with the same length as the input list\\nval input = List(1, 2, 3)\nval result = m()\nassert(result.length == input.length)\\n\n// 3. Test: Check if the function `m` returns a list with unique values\\nval result = m()\nassert(result.distinct == result)\\n"
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/scala/example/ScalaFix.scala"
                },
                "region": {
                  "snippet": {
                    "text": "// 1. Test: Check if the function `m` returns a list with the expected values\\nval result = m()\nassert(result == List(2, 3, 4))\\n\n// 2. Test: Check if the function `m` returns a list with the same length as the input list\\nval input = List(1, 2, 3)\nval result = m()\nassert(result.length == input.length)\\n\n// 3. Test: Check if the function `m` returns a list with unique values\\nval result = m()\nassert(result.distinct == result)\\n"
                  },
                  "startColumn": 171,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Test coverage can be improved"
          },
          "ruleId": "a8161a2c-d54d-4460-850b-c63fa9564e00"
        }
      ],
      "tool": {
        "driver": {
          "fullName": "Formalm",
          "language": "en",
          "name": "Formalm",
          "organization": "Xebia Functional",
          "rules": [
            {
              "help": {
                "markdown": "\n1. Test: Check if the function `m` returns a list with the expected values\n```scala\nval result = m()\nassert(result == List(2, 3, 4))\n```\n\n\n2. Test: Check if the function `m` returns a list with the same length as the input list\n```scala\nval input = List(1, 2, 3)\nval result = m()\nassert(result.length == input.length)\n```\n\n\n3. Test: Check if the function `m` returns a list with unique values\n```scala\nval result = m()\nassert(result.distinct == result)\n```\n\n",
                "text": "Test coverage can be improved"
              },
              "id": "a8161a2c-d54d-4460-850b-c63fa9564e00",
              "name": "Test coverage can be improved",
              "shortDescription": {
                "text": "Coverage report can be improved"
              }
            }
          ],
          "version": "0.0.1"
        }
      }
    }
  ]
}
